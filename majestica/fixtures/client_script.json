[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Purchase Order Item",
  "modified": "2020-09-28 19:31:04.087536",
  "name": "Purchase Order Item-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "cur_frm.add_fetch('item', 'reorder_level', 'reorder_level');",
  "script_type": "Client"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Label",
  "modified": "2021-04-12 16:58:26.049919",
  "name": "Label-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// Copyright (c) 2020, Frappe Technologies Pvt. Ltd. and contributors\n// For license information, please see license.txt\n\nfrappe.ui.form.on('Label', {\n\t// refresh: function(frm) {\n\n\t// },\n\t\t\n\tscan_barcode: function (frm) {\n\tif(frm.doc.scan_barcode == \"\"){\n\t\n\t}\n\telse{\n\tget_rate_price_list(frm)\n\n\t}\n\t},\n});\n\nfrappe.ui.form.on(\"Label Item\", {\n    item_code(frm, cdt, cdn) {\n        var child = locals[cdt][cdn];\n        if(child.item_code){\n            frappe.call({\n\t        method:\"majestica.majestica.doctype.label.label.get_price\",\n\t        args:{'item':child.item_code, \"price_list\": frm.doc.price_list},\n\t        callback:function(r){\n\t            if(r.message){\n\t                console.log(\"Get Price Detail Item Code on Change  \"+r.message)\n\t                child.rate= r.message;\n\t                frm.refresh_field(\"items\");\n\t            }\n\t            }\n    \t    })\n        }\n    },\n\n\n    barcode(frm, cdt, cdn) {\n        var child = locals[cdt][cdn];\n        if(child.barcode){\n            frappe.call({\n\t        method:\"majestica.majestica.doctype.label.label.get_searchbarcode_rate\",\n\t        args:{'barcode':child.barcode, \"price_list\": frm.doc.price_list},\n\t        callback:function(r){\n\t            if(r.message){\n\t                console.log(\"The Data barcode \"+r.message[0][0])\n\t                console.log(\"The Data barcode \"+r.message[0][1])   \n\t                child.rate = r.message[0][0];\n\t                child.item_code= r.message[0][1];\n\t                frm.refresh_field(\"items\");\n\t\t\t}\n\t            }\n    \t    })\n        }\n    }, \n\n\n\n\n\n\n})\n\n\n\nfunction get_rate_price_list(frm){\n            frappe.call({\n\t        method:\"majestica.majestica.doctype.label.label.get_searchbarcode_rate\",\n\t        args:{'barcode':frm.doc.scan_barcode, \"price_list\": frm.doc.price_list},\n\t        callback:function(r){\n\t            if(r.message){\n\t                console.log(\"The Data barcode get rate price list  \"+r.message)\n\t\t\tvar rate = r.message[0][0]\n\t\t\tvar mitem = r.message[0][1]\n\t\t\tconsole.log(\" rate : \"+rate )\n\t\t\tconsole.log(\" mitem : \"+mitem )\n\n\t\t\tvar child = cur_frm.add_child(\"items\");\n\t\t\t//child.rate = rate\n\t\t\t//child.barcode = frm.doc.scan_barcode\n\t\t\tfrappe.model.set_value(child.doctype, child.name, \"rate\", rate)\t\t\t\t\t \n                       frappe.model.set_value(child.doctype, child.name, \"barcode\", frm.doc.scan_barcode)\n                       frappe.model.set_value(child.doctype, child.name, \"item_code\", mitem )\n\t\t\tcur_frm.set_value(\"scan_barcode\", \"\")\n\t\t\t}\n\t\t\tcur_frm.set_value(\"scan_barcode\", \"\")\n\t\t\tcur_frm.refresh_field(\"items\")\n\n\t            }\n\n    \t    })\n}\n\n\n\n",
  "script_type": "Client"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Sales Order",
  "modified": "2020-12-09 01:23:15.302860",
  "name": "Sales Order-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Order', {\n\trefresh(frm) {\n\t\tif(frm.doc.__islocal){\n\t\t\tfrm.set_value(\"order_from\", \"Direct\");\n\t\t}\n\t},\n\trefresh(frm) {\n\t\tfrm.toggle_display(\"scan_barcode\", false);\n\t},\n\tscan(frm) {\n\t\tlet scan_barcode_field = frm.fields_dict[\"scan\"];\n\n\t\tlet show_description = function(idx, exist = null) {\n\t\t\tif (exist) {\n\t\t\t\tscan_barcode_field.set_new_description(__('Row #{0}: Qty increased by 1', [idx]));\n\t\t\t} else {\n\t\t\t\tscan_barcode_field.set_new_description(__('Row #{0}: Item added', [idx]));\n\t\t\t}\n\t\t}\n\n\t\tif(frm.doc.scan) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"erpnext.selling.page.point_of_sale.point_of_sale.search_serial_or_batch_or_barcode_number\",\n\t\t\t\targs: { search_value: frm.doc.scan }\n\t\t\t}).then(r => {\n\t\t\t\tconst data = r && r.message;\n\t\t\t\tif (!data || Object.keys(data).length === 0) {\n\t\t\t\t\tscan_barcode_field.set_new_description(__('Cannot find Item with this barcode'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet cur_grid = frm.fields_dict.items.grid;\n\n\t\t\t\tlet row_to_modify = null;\n\t\t\t\tconst existing_item_row = frm.doc.items.find(d => d.item_code === data.item_code);\n\t\t\t\tconst blank_item_row = frm.doc.items.find(d => !d.item_code);\n\n\t\t\t\tif (existing_item_row) {\n\t\t\t\t\trow_to_modify = existing_item_row;\n\t\t\t\t} else if (blank_item_row) {\n\t\t\t\t\trow_to_modify = blank_item_row;\n\t\t\t\t}\n\n\t\t\t\tif (!row_to_modify) {\n\t\t\t\t\t// add new row\n\t\t\t\t\trow_to_modify = frappe.model.add_child(frm.doc, cur_grid.doctype, 'items', 1);\n\t\t\t\t}\n\n\t\t\t\tshow_description(row_to_modify.idx, row_to_modify.item_code);\n\n\t\t\t\tfrm.from_barcode = true;\n\t\t\t\tfrappe.model.set_value(row_to_modify.doctype, row_to_modify.name, {\n\t\t\t\t\titem_code: data.item_code,\n\t\t\t\t\tqty: (row_to_modify.qty || 0) + 1\n\t\t\t\t});\n\n\t\t\t\t['serial_no', 'batch_no', 'barcode'].forEach(field => {\n\t\t\t\t\tif (data[field] && frappe.meta.has_field(row_to_modify.doctype, field)) {\n\t\t\t\t\t\tfrappe.model.set_value(row_to_modify.doctype,\n\t\t\t\t\t\t\trow_to_modify.name, field, data[field]);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tscan_barcode_field.set_value('');\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n});\n\n\nfrappe.ui.form.on('Sales Order Item', {\n\titems_add(frm, cdt, cdn) {\n        var child = locals[cdt][cdn];\n        var items = frm.doc.items;\n        frm.doc.items = [];\n        items.reverse();\n        for(var i in items){\n            var d = frm.add_child(\"items\", items[i])\n        }\n        frm.refresh_field(\"items\");\n\t}\n})\n",
  "script_type": "Client"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Sales Invoice",
  "modified": "2020-12-09 01:17:26.284345",
  "name": "Sales Invoice-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Invoice', {\n\trefresh(frm) {\n\t\tfrm.toggle_display(\"scan_barcode\", false);\n\t},\n\tscan(frm) {\n\t\tlet scan_barcode_field = frm.fields_dict[\"scan\"];\n\n\t\tlet show_description = function(idx, exist = null) {\n\t\t\tif (exist) {\n\t\t\t\tscan_barcode_field.set_new_description(__('Row #{0}: Qty increased by 1', [idx]));\n\t\t\t} else {\n\t\t\t\tscan_barcode_field.set_new_description(__('Row #{0}: Item added', [idx]));\n\t\t\t}\n\t\t}\n\n\t\tif(frm.doc.scan) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"erpnext.selling.page.point_of_sale.point_of_sale.search_serial_or_batch_or_barcode_number\",\n\t\t\t\targs: { search_value: frm.doc.scan }\n\t\t\t}).then(r => {\n\t\t\t\tconst data = r && r.message;\n\t\t\t\tif (!data || Object.keys(data).length === 0) {\n\t\t\t\t\tscan_barcode_field.set_new_description(__('Cannot find Item with this barcode'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet cur_grid = frm.fields_dict.items.grid;\n\n\t\t\t\tlet row_to_modify = null;\n\t\t\t\tconst existing_item_row = frm.doc.items.find(d => d.item_code === data.item_code);\n\t\t\t\tconst blank_item_row = frm.doc.items.find(d => !d.item_code);\n\n\t\t\t\tif (existing_item_row) {\n\t\t\t\t\trow_to_modify = existing_item_row;\n\t\t\t\t} else if (blank_item_row) {\n\t\t\t\t\trow_to_modify = blank_item_row;\n\t\t\t\t}\n\n\t\t\t\tif (!row_to_modify) {\n\t\t\t\t\t// add new row\n\t\t\t\t\trow_to_modify = frappe.model.add_child(frm.doc, cur_grid.doctype, 'items', 1);\n\t\t\t\t}\n\n\t\t\t\tshow_description(row_to_modify.idx, row_to_modify.item_code);\n\n\t\t\t\tfrm.from_barcode = true;\n\t\t\t\tfrappe.model.set_value(row_to_modify.doctype, row_to_modify.name, {\n\t\t\t\t\titem_code: data.item_code,\n\t\t\t\t\tqty: (row_to_modify.qty || 0) + 1\n\t\t\t\t});\n\n\t\t\t\t['serial_no', 'batch_no', 'barcode'].forEach(field => {\n\t\t\t\t\tif (data[field] && frappe.meta.has_field(row_to_modify.doctype, field)) {\n\t\t\t\t\t\tfrappe.model.set_value(row_to_modify.doctype,\n\t\t\t\t\t\t\trow_to_modify.name, field, data[field]);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tscan_barcode_field.set_value('');\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t}\n})\n\nfrappe.ui.form.on('Sales Invoice Item', {\n\titems_add(frm, cdt, cdn) {\n        var child = locals[cdt][cdn];\n        var items = frm.doc.items;\n        frm.doc.items = [];\n        items.reverse();\n        for(var i in items){\n            var d = frm.add_child(\"items\", items[i])\n        }\n        frm.refresh_field(\"items\");\n\t}\n})\n",
  "script_type": "Client"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Stock Arrival",
  "modified": "2019-09-08 13:27:24.186549",
  "name": "Stock Arrival-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "/*-----------------stock with barcode(sahil)----------------*/\n\nfrappe.ui.form.on(\"Arrival Items\", \"item_barcode\", function(frm, cdt, cdn){\n\t//console.log(\"sahil is here\");\n\tvar child = frappe.get_doc(cdt, cdn);\n\tif(child){\n\t\tfrappe.model.get_value(\"Item\", {\"barcode\": child.item_barcode}, \"item_code\", function(r){\n\t\t\tif(r){\n\t\t\t\tfrappe.model.set_value(child.doctype, child.name, \"item_code\", r.item_code);\n\t\t\t}\n\t\t});\n\t}\n});",
  "script_type": "Client"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Stock Reconciliation",
  "modified": "2019-09-08 13:28:00.809091",
  "name": "Stock Reconciliation-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Stock Reconciliation Item\", \"barcode\", function(frm, cdt, cdn){\n\tvar child = locals[cdt][cdn];\n\tif(child.barcode){\n\t\tfrappe.call({\n\t\t\t\"method\": \"majestica.whitelisted.get_item\",\n\t\t\t\"args\": {\"barcode\": child.barcode},\n\t\t\t\"callback\": function(r){\n\t\t\t\tif(r){\n\t\t\t\t\tvar item = r.message;\n\t\t\t\t\t$.extend(child, {\n\t\t\t\t\t\t\"item_code\": item[0].parent\n\t\t\t\t\t});\n\t\t\t\t\tfrm.refresh()\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\t\n});",
  "script_type": "Client"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Stock Entry",
  "modified": "2019-09-08 13:28:58.204636",
  "name": "Stock Entry-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "/*-------------search with barcode------------*/\nfrappe.ui.form.on(\"Stock Entry Detail\", \"barcode\", function(frm, cdt, cdn){\n\tvar child = locals[cdt][cdn];\n\tif(child.barcode){\n\t\tfrappe.call({\n\t\t\t\"method\": \"majestica.whitelisted.get_item\",\n\t\t\t\"args\": {\"barcode\": child.barcode},\n\t\t\t\"callback\": function(r){\n\t\t\t\tif(r){\n\t\t\t\t\tvar item = r.message;\n\t\t\t\t\t$.extend(child, {\n\t\t\t\t\t\t\"item_code\": item[0].parent\n\t\t\t\t\t});\n\t\t\t\t\tfrm.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\t\n});",
  "script_type": "Client"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Purchase Order",
  "modified": "2019-09-08 13:29:37.552583",
  "name": "Purchase Order-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "/*\nfrappe.ui.form.on(\"Purchase Order Item\", {\nitem_code: function(frm, cdt, cdn) {\n\tlet d = locals[cdt][cdn];\n\nlet material_details = frm.doc.items\n  \n   for(let i in material_details) {\n\tlet total =   material_details[i].item_code\n\t}\n\t \n //console.log(total);\n \n  \n//console.log(d);\n//console.log(frm);\n \nfrappe.call({\n\t\tmethod: \"erpnext.accounts.doctype.account.account.update_cbm\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\t \n\t\t\t\t\t\tname: total\n\t\t\t\t\t \n} \n});\n }\n});\n*/\n\n/*------------------cbm(sahil)-------------------*/\nfrappe.ui.form.on(\"Purchase Order\", \"before_save\", function(frm){\n\tvar table = frm.doc.items;\n\tfor(let i=0;i<table.length;i++){\n\t\tif(table[i].cbm_information == 0 || table[i].cbm_information == null){\n\t\t\tvar cbm = (table[i].conversion_factor * table[i].qty * 1);\n\t\t} else{\n\t\t\tvar cbm = (table[i].conversion_factor * table[i].qty * table[i].cbm_information);\n\t\t}\n\t\tfrappe.model.set_value(table[i].doctype, table[i].name, \"cbm_informations\", cbm);\n\t}\n});\n\n\nfrappe.ui.form.on(\"Purchase Order\", \"before_submit\", function(frm, cdt, cdn){\n\tvar table = frm.doc.items;\n\tvar cbm_total = 0;\n\tif(table){\n\t\tfor(let i=0;i<table.length;i++){\n\t\t\tif(table[i].cbm_informations >= 0){\n\t\t\t\tcbm_total += parseInt(table[i].cbm_informations);\n\t\t\t}\n\t\t}\n\t}\n\tfrappe.model.set_value(\"Purchase Order\", frm.doc.name, \"cbm_total\", cbm_total);\n});",
  "script_type": "Client"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Purchase Invoice",
  "modified": "2019-09-08 13:30:44.034382",
  "name": "Purchase Invoice-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "/*-----------CBM(Sahi)---------------*/\n\nfrappe.ui.form.on(\"Purchase Invoice Item\", \"qty\", function(frm, cdt, cdn){\n\tvar child = frappe.get_doc(cdt, cdn);\n\tvar qty = child.qty || 0.0;\n\tvar conversion_fact = child.conversion_factor || 1;\n\tfrappe.model.get_value(\"Item\", {\"name\": child.item_code}, \"cbm_information\", function(r){\n\t\tif(r){\n\t\t\tvar cbm = (r.cbm_information * qty * conversion_fact);\n\t\t\tfrappe.model.set_value(child.doctype, child.name, \"cbm_information\", cbm);\n\t\t}\n\t});\n});",
  "script_type": "Client"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Cap Stock Arrival",
  "modified": "2020-03-19 18:04:54.819418",
  "name": "Cap Stock Arrival-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// Copyright (c) 2020, Frappe Technologies Pvt. Ltd. and contributors\n// For license information, please see license.txt\n\nfrappe.ui.form.on('Cap Stock Arrival', {\n\t// refresh: function(frm) {\n\n\t// }\n\tscan_barcode: function (frm) {\n\t\t//console.log(frm)\n\t\tlet scan_barcode_field = frm.fields_dict[\"scan_barcode\"];\n\n\t\tlet show_description = function (idx, exist = null) {\n\t\t\tif (exist) {\n\t\t\t\tscan_barcode_field.set_new_description(__('Row #{0}: Qty increased by 1', [idx]));\n\t\t\t} else {\n\t\t\t\tscan_barcode_field.set_new_description(__('Row #{0}: Item added', [idx]));\n\t\t\t}\n\t\t}\n\n\t\tif (frm.doc.scan_barcode) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"erpnext.selling.page.point_of_sale.point_of_sale.search_serial_or_batch_or_barcode_number\",\n\t\t\t\targs: { search_value: frm.doc.scan_barcode }\n\t\t\t}).then(r => {\n\t\t\t\tconst data = r && r.message;\n\t\t\t\tconsole.log(data)\n\t\t\t\tif (!data || Object.keys(data).length === 0) {\n\t\t\t\t\tscan_barcode_field.set_new_description(__('Cannot find Item with this barcode'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet cur_grid = frm.fields_dict.items.grid;\n\n\t\t\t\tlet row_to_modify = null;\n\t\t\t\tif (frm.doc.items) {\n\t\t\t\t\tconst existing_item_row = frm.doc.items.find(d => d.item_code === data.item_code);\n\t\t\t\t\tconst blank_item_row = frm.doc.items.find(d => !d.item_code);\n\n\t\t\t\t\tif (existing_item_row) {\n\t\t\t\t\t\trow_to_modify = existing_item_row;\n\t\t\t\t\t} else if (blank_item_row) {\n\t\t\t\t\t\trow_to_modify = blank_item_row;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!row_to_modify) {\n\t\t\t\t\t// add new row\n\t\t\t\t\trow_to_modify = frappe.model.add_child(frm.doc, cur_grid.doctype, 'items');\n\t\t\t\t}\n\n\t\t\t\tshow_description(row_to_modify.idx, row_to_modify.item_code);\n\n\t\t\t\tfrm.from_barcode = true;\n\t\t\t\tfrappe.model.set_value(row_to_modify.doctype, row_to_modify.name, {\n\t\t\t\t\titem_code: data.item_code,\n\t\t\t\t\tqty: (row_to_modify.qty || 0) + 1\n\t\t\t\t});\n\n\t\t\t\t['serial_no', 'batch_no', 'barcode'].forEach(field => {\n\t\t\t\t\tif (data[field] && frappe.meta.has_field(row_to_modify.doctype, field)) {\n\t\t\t\t\t\tfrappe.model.set_value(row_to_modify.doctype,\n\t\t\t\t\t\t\trow_to_modify.name, field, data[field]);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tscan_barcode_field.set_value('');\n\t\t\t\tcur_frm.refresh_field(\"items\");\n                                var target= cur_frm.doc.items.filter(function (item) {\n                                   return item.item_code=== data.item_code;\n                                });\n                                target.barcode = data.barcode;\n                                cur_frm.refresh_field(\"items\");\n\t\t\t\tfrm.refresh_field(\"item_code\");\n\t\t\t});\n\t\t}\n\n\t},\n});\n\nfrappe.ui.form.on(\"Stock Arrival Item\", {\n\titem_code: function (frm, cdt, cdn) {\n\n\t\tvar row = locals[cdt][cdn];\n\t\tfrappe.call(\n\t\t\t{\n\t\t\t\tmethod: \"frappe.client.get\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: \"Item\",\n\t\t\t\t\tname: row.item_code,\n\t\t\t\t},\n\t\t\t\tcallback(dl) {\n\t\t\t\t\tconsole.log(dl.message);\n                                         var target_b= dl.message.barcodes.filter(function (item) {\n                                   return item.barcode== row.barcode;\n                                });\nconsole.log(target_b)\n\n\t\t\t\t\tfrappe.model.set_value(row.doctype, row.name, \"item_name\", dl.message.item_name);\n\t\t\t\t\tcur_frm.refresh_field(\"item_name\");\n\t\t\t\t\tfrappe.model.set_value(row.doctype, row.name, \"uom\", target_b[0].uom);\n\t\t\t\t\tcur_frm.refresh_field(\"uom\");\n\t\t\t\t\tfrappe.model.set_value(row.doctype, row.name, \"description\", dl.message.description);\n\t\t\t\t\tcur_frm.refresh_field(\"description\");\n\t\t\t\t\tfrappe.model.set_value(row.doctype, row.name, \"conversion_factor\",target_b[0].conversion_factor);\n\t\t\t\t\tcur_frm.refresh_field(\"conversion_factor\");\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t// frappe.call(  \n\t\t// \t{\n\t\t// \t\tmethod: \"erpnext.selling.doctype.sales_order.sales_order.get_stock_balance\",\n\t\t// \t\targs: {\n\t\t// \t\t\titem_code: row.item_code,\n\t\t// \t\t},\n\t\t// \t\tcallback(dl) {\n\t\t// \t\t\tconsole.log(dl.message);\n\t\t// \t\t\tif(dl.message==0){\n\t\t// \t\t\t\tfrappe.msgprint(\"Item out of stock\")\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t});\n\n\n\n\t}\n})\n",
  "script_type": "Client"
 }
]